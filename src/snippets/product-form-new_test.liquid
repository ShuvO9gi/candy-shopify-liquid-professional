{{ 'new-custom.css' | asset_url | stylesheet_tag }}
{% assign section_id = "custom" %}
{%- capture form_id -%}AddToCartForm-{{ section_id }}{%- endcapture -%}
{%- form 'product', product, id: form_id, class: 'product-single__form' -%}
  {%- unless product.has_only_default_variant -%}
    {%- for option in product.options_with_values -%}
      {%- liquid
        if settings.product_color_swatches
          assign is_color = false
          assign color_option_index = 0
          assign swatch_trigger = 'products.general.color_swatch_trigger' | t | downcase
          assign color_option_index = forloop.index0
          assign downcased_option = option.name | downcase
          if downcased_option contains swatch_trigger
            assign is_color = true
          elsif swatch_trigger == 'color' and downcased_option contains 'colour'
            assign is_color = true
          endif
        endif
      -%}

	<div class="product-detail">
      <div class="product-card__title type-style-h3-bold"> Vælg variant </div>

        {%- render 'variant-dropdowntest' -%}

	</div>
    {%- endfor -%}
  {%- endunless -%}
 
  <select name="id" id="ProductSelect-{{ section_id }}" class="product-single__variants no-js" data-variant-select>
    {%- for variant in product.variants -%}
    {%- if variant.available -%}
    <option {% if variant == product.selected_or_first_available_variant %}
            selected="selected"{% endif %}
            value="{{ variant.id }}">
      {{ variant.title }} - {{ variant.price | money_with_currency }}
    </option>
    {%- else -%}
    <option disabled="disabled">
      {{ variant.title }} - {{ 'products.product.sold_out' | t }}
    </option>
    {%- endif -%}
    {%- endfor -%}
  </select>


  {%- if settings.quantity_enable -%}
    <div class="product__quantity product__quantity--{{ settings.variant_type }}">
      <label for="Quantity-{{ section_id }}">{{ 'products.product.quantity' | t }}</label>
      {%- render 'quantity-input', id: section_id, qty: 1, min: 1 -%}
    </div>
  {%- endif -%}

  {%- assign inventory_visible = false -%}
  {%- if settings.inventory_enable and current_variant.inventory_management == 'shopify' -%}
    {%- if current_variant.inventory_quantity <= settings.inventory_threshold and current_variant.inventory_quantity >= 0 -%}
      {%- assign inventory_visible = true -%}
    {%- endif -%}
  {%- endif -%}

  {%- liquid
    if current_variant.inventory_quantity == 0 or current_variant.inventory_policy == 'continue'
      assign inventory_visible = false
    endif

    assign show_incoming = false
    if current_variant.incoming and inventory_visible == false and current_variant.inventory_quantity <= settings.inventory_threshold
      assign show_incoming = true
    endif
  -%}

  {%- if settings.inventory_enable -%}
    <div
      id="ProductInventory-{{ section_id }}"
      class="product__inventory{% unless inventory_visible %} hide{% endunless %}"
      >
      {%- if current_variant.available -%}
        {{ 'products.product.stock_label' | t: count: current_variant.inventory_quantity }}
      {%- endif -%}
    </div>
  {%- endif -%}

  {%- if settings.inventory_transfers_enable -%}
    <div
      id="ProductIncomingInventory-{{ section_id }}"
      class="product__inventory{% if inventory_visible %} hide{% endif %}">
      {%- if show_incoming == true -%}
        {%- if current_variant.next_incoming_date -%}
          {%- assign date = current_variant.next_incoming_date | date: format: 'date' -%}
          {%- if current_variant.available -%}
            {{ 'products.product.will_not_ship_until' | t: date: date }}
          {%- else -%}
            {{ 'products.product.will_be_in_stock_after' | t: date: date }}
          {%- endif -%}
        {%- else -%}
          {{ 'products.product.waiting_for_stock' | t }}
        {%- endif -%}
      {%- endif -%}
    </div>
  {%- endif -%}

  {%- liquid
    assign enable_dynamic_buttons = false
    if settings.enable_payment_button and template != 'product.preorder'
      assign enable_dynamic_buttons = true
    endif
  -%}

  {%- if enable_dynamic_buttons -%}
    <div class="payment-buttons">
  {%- endif -%}

    {%- liquid
      assign default_text = 'products.product.add_to_cart' | t
      assign button_text = 'products.product.add_to_cart' | t
      if template == 'product.preorder'
        assign default_text = 'products.product.preorder' | t
        assign button_text = 'products.product.preorder' | t
      endif
      unless current_variant.available
        assign button_text = 'products.product.sold_out' | t
      endunless
    -%}
      <div class="product-detail" id="productDetail">
        <div class="product-card__title type-style-h3-bold"> Vælg antal </div>
        <div class="product block-flex">
          <div class="product-card__btn-wrapper relative mt-auto">
            <div class="jss-qty__wrapper product-card__qty-wrapper absolute top-0 mt-0 left-0 w-full flex items-center border-2 border-orange bg-light rounded-radius is--visible" data-qty-wrapper="" data-qty-id="39739024703668">
              <button class="rounded-radius jss-qty__adjust--minus" data-qty-minus=""><img src="{{ 'minus.png' | asset_url }}"></button>
              <div class="flex items-center justify-center flex-auto flex-col xl:flex-row text-dark text-[20px] sm:text-lg text-center sm:text-left font-bold font-heading tracking-wide uppercase rounded-md">
                <span></span>

                <span> 
                  <span class="js-qty__num_text mx-[3px]"> 1 </span> stk.
                </span>
              </div>
              <button class=" rounded-radius jss-qty__adjust--plus " data-qty-plus=""><img src="{{ 'plus.png' | asset_url }}"></button>
            </div>
          </div>

          <div class="submit-wrapper">
            <button
              {% if product.empty? %}type="button"{% else %}type="submit"{% endif %}
              name="add"
              onclick="gtmAddToCartPush()"
              id="AddToCart-{{ section_id }}"
              data-submit-button
              data-component="addToCart"
              class="candyBoxBuyButton btn bg-orange rounded-radius btn--full add-to-cart{% if enable_dynamic_buttons and product.selling_plan_groups == empty %} btn--secondary{% endif %}"
              {% unless current_variant.available %} disabled="disabled"{% endunless %}>
              <span id="AddToCartText-{{ section_id }}" data-default-text="{{ default_text }}">
                {{ button_text }}
              </span>
            </button>
			      <input type="hidden" name="quantity" class="js-qty__num" value="1"/>
          </div>
        </div>
	</div>
    

    {%- if enable_dynamic_buttons -%}
      {{ form | payment_button }}
    {%- endif -%}

  {%- if enable_dynamic_buttons -%}
    </div>
  {%- endif -%}

  <textarea id="VariantsJson-{{ section_id }}" class="hide" aria-hidden="true" aria-label="Product JSON">
    {{ product.variants | json }}
  </textarea>
  {%- if product.options.size > 1 -%}
    <textarea id="CurrentVariantJson-{{ section_id }}" class="hide" aria-hidden="true" aria-label="Variant JSON">
      {{ current_variant | json }}
    </textarea>
  {%- endif -%}
{%- endform -%}



<script>
  document.querySelector('.jss-qty__adjust--minus').addEventListener('click', function(event) {
    event.preventDefault();
    var qty = document.querySelector(".js-qty__num").value;
    qty = parseInt(qty) - 1;
    qty = qty <= 0 ? qty = 1 : qty; 
	  document.querySelector(".js-qty__num_text").innerText  = qty;
    document.querySelector(".js-qty__num").value = qty;
  });

  document.querySelector('.jss-qty__adjust--plus').addEventListener('click', function(event) {
    event.preventDefault();
	  var qty = document.querySelector(".js-qty__num").value;
    qty = parseInt(qty) + 1;
	  document.querySelector(".js-qty__num_text").innerText  = qty;
    document.querySelector(".js-qty__num").value = qty;
  });

  var variants = document.querySelector('#VariantsJson-custom').value;
  var productJson = JSON.parse(variants);
  var defaultImage = document.querySelector('.productImage img').src;
  
  document.querySelector('.variant__input-custom').addEventListener('change', function(event) {
    var val = event.target.value;
    items = Array.from(document.querySelectorAll('#ProductSelect-custom option'));
    items.find(c => {
      if(c.text.includes(val)){
        productJson.forEach(item => {
          if(item.id == c.value && item.featured_image != null) 
          document.querySelector('.productImage img').src = item.featured_image.src;
          
          if(item.id == c.value && item.featured_image == null) 
          document.querySelector('.productImage img').src = defaultImage;
        });
      	return true;
      }
      return false;
    }).selected = true;
  });
  
  //GTM dataLayer event
  function gtmAddToCartPush() {
        dataLayer.push({ ecommerce: null });
        dataLayer.push({
            event: 'add_to_cart_stape',
            {%  if customer %}
            'CustomerEmail' : '{{ customer.email }}',
            'CustomerFirstName' : '{{ customer.first_name }}',
            'CustomerLastName' : '{{ customer.last_name }}',
            'CustomerId': '{{ customer.id | remove: "'" }}',
            {%  endif %}
            'ecommerce': {
            'currency': '{{ cart.currency.iso_code }}',
            'items': [{
                    'item_name': {{ product.title | json }},
                    'item_id': '{{ product.id }}',
                    'item_sku': {{ product.selected_or_first_available_variant.sku | json }},
                    'item_brand': {{ product.vendor | json }},
                    'item_category': {{ product.type | json }},
                    'price': {{ product.selected_or_first_available_variant.price | money_without_currency | remove: "," | times: 0.01 }}
                }]
            }
        });
  }
</script>